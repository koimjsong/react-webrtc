"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkkoiOcr"] = self["webpackChunkkoiOcr"] || []).push([["public_js_koiOcr_affineProcessor_js"],{

/***/ "./public/js/koiOcr/affineProcessor.js":
/*!*********************************************!*\
  !*** ./public/js/koiOcr/affineProcessor.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocsAffine: () => (/* binding */ DocsAffine)\n/* harmony export */ });\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module './affine/doc_affine.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\nclass DocsAffine {\n  constructor() {\n    this.Module = null;\n    this.buffer = null;\n    this.isModelLoaded = false;\n  }\n  async loadModel() {\n    try {\n      if (!this.isModelLoaded) {\n        this.Module = await Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './affine/doc_affine.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\n        if (!this.Module) {\n          console.error(\"Failed to load the module.\");\n          return 0;\n        }\n        // if (result == 1) {\n        //   this.isModelLoaded = true;\n        // } else {\n        //   console.error(\"Model initialization failed.\");\n        //   return 0;\n        // }\n      }\n      return 1;\n    } catch (error) {\n      console.error(\"Error during model loading:\", error);\n      alert(\"Error during model loading:\" + error);\n      return 0;\n    }\n  }\n  getAll(imageData, width, height) {\n    const bufferSize = width * height * 4 + 1;\n    this.buffer = this.Module._malloc(bufferSize);\n    const inputBuffer = new Uint8Array(this.Module.HEAPU8.buffer, this.buffer, bufferSize);\n    inputBuffer.set(imageData.data);\n    const resultCharPtr = this.Module.ccall(\"doc_affine_function\", \"number\", [\"number\", \"number\", \"number\"], [this.buffer, width, height]);\n    console.log(\"resultCharPtr\", resultCharPtr);\n    resultString = this.Module.AsciiToString(resultCharPtr);\n    const result = {\n      resultJSON: JSON.parse(resultString)\n    };\n    this.Module._free(resultCharPtr);\n    this.Module._free(this.buffer);\n    return result;\n  }\n  getPoints(imageData, width, height) {\n    const bufferSize = width * height * 4 + 1;\n    this.buffer = this.Module._malloc(bufferSize);\n    const inputBuffer = new Uint8Array(this.Module.HEAPU8.buffer, this.buffer, bufferSize);\n    inputBuffer.set(imageData.data);\n    const resultCharPtr2 = this.Module.ccall(\"corner_point_function\", \"number\", [\"number\", \"number\", \"number\"], [this.buffer, width, height]);\n    // console.log(\"resultCharPtr2\", resultCharPtr2);\n    const resultString2 = this.Module.AsciiToString(resultCharPtr2);\n    const result2 = {\n      resultJSON: JSON.parse(resultString2)\n    };\n    this.Module._free(resultCharPtr2);\n    this.Module._free(this.buffer);\n    return result2;\n  }\n  getAffine(imageData, width, height, points) {\n    const bufferSize = width * height * 4 + 1;\n    this.buffer = this.Module._malloc(bufferSize);\n    const inputBuffer = new Uint8Array(this.Module.HEAPU8.buffer, this.buffer, bufferSize);\n    inputBuffer.set(imageData.data);\n\n    // const points = result2.resultJSON.points;\n    const resultCharPtr3 = this.Module.ccall(\"wrap_function\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"], [this.buffer, width, height, points[0].x, points[0].y, points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    // console.log(\"resultCharPtr3\", resultCharPtr3);\n    const resultString3 = this.Module.AsciiToString(resultCharPtr3);\n    const result3 = {\n      resultJSON: JSON.parse(resultString3)\n    };\n    this.Module._free(resultCharPtr3);\n    this.Module._free(this.buffer);\n    return result3;\n  }\n\n  //   extract_ingam_to_base64 = (imageData, width, height) => {\n  //     const bufferSize = width * height * 4 + 1;\n  //     this.buffer = this.Module._malloc(bufferSize);\n  //     const inputBuffer = new Uint8Array(\n  //       this.Module.HEAPU8.buffer,\n  //       this.buffer,\n  //       bufferSize\n  //     );\n  //     inputBuffer.set(imageData.data);\n\n  //     //  const resultCharPtr = this.Module.ccall(\n  //     //    \"doc_affine_function\",\n  //     //    \"number\",\n  //     //    [\"number\", \"number\", \"number\"],\n  //     //    [buffer, width, height]\n  //     //  );\n  //     //  console.log(\"resultCharPtr\", resultCharPtr);\n  //     //  resultString = this.Module.AsciiToString(resultCharPtr);\n  //     //  const result = {\n  //     //    resultJSON: JSON.parse(resultString),\n  //     //  };\n\n  //     const resultCharPtr2 = this.Module.ccall(\n  //       \"corner_point_function\",\n  //       \"number\",\n  //       [\"number\", \"number\", \"number\"],\n  //       [this.buffer, width, height]\n  //     );\n  //     console.log(\"resultCharPtr2\", resultCharPtr2);\n  //     const resultString2 = this.Module.AsciiToString(resultCharPtr2);\n  //     const result2 = {\n  //       resultJSON: JSON.parse(resultString2),\n  //     };\n\n  //     console.log(\"result2: \", result2);\n\n  //     const points = result2.resultJSON.points;\n  //     const resultCharPtr3 = this.Module.ccall(\n  //       \"wrap_function\",\n  //       \"number\",\n  //       [\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //         \"number\",\n  //       ],\n  //       [\n  //         this.buffer,\n  //         width,\n  //         height,\n  //         points[0].x,\n  //         points[0].y,\n  //         points[1].x,\n  //         points[1].y,\n  //         points[2].x,\n  //         points[2].y,\n  //         points[3].x,\n  //         points[3].y,\n  //       ]\n  //     );\n  //     console.log(\"resultCharPtr3\", resultCharPtr3);\n  //     const resultString3 = this.Module.AsciiToString(resultCharPtr3);\n  //     const result3 = {\n  //       resultJSON: JSON.parse(resultString3),\n  //     };\n\n  //     this.Module._free(resultCharPtr2);\n  //     this.Module._free(resultCharPtr3);\n  //     this.Module._free(this.buffer);\n  //     return result3;\n  //   };\n\n  unload() {\n    if (this.Module) {\n      this.Module._free(this.buffer);\n      this.buffer = null;\n      this.Module = null;\n      this.isModelLoaded = false;\n    }\n  }\n}\n\n// export default affineProcessor;\n\n\n//# sourceURL=webpack://koiOcr/./public/js/koiOcr/affineProcessor.js?");

/***/ })

}]);